#version 430

layout (local_size_x = 20, local_size_y = 20) in;

layout (std430, binding = 0) buffer MatrixBuffer {
    float matrix[];
};

layout (std430, binding = 1) buffer VectorBuffer {
    float vector[];
};

layout (std430, binding = 2) buffer ResultBuffer {
    float result[];
};

uniform uint matrixRows;
uniform uint matrixColumns;

void main() {
    uint globalIndex = gl_GlobalInvocationID.y * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;

    uint rowIndex = globalIndex / matrixColumns;

    float dotProduct = 0.0;
    for (uint i = 0; i < matrixColumns; i++) {
        float matrixValue = matrix[rowIndex * matrixColumns + i];
        float vectorValue = vector[i];
        dotProduct += matrixValue * vectorValue;
    }

    result[rowIndex] = dotProduct;
}
